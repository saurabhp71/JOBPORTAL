@model JobPortalLibrary.JobSeeker.SeekerUser

@{
    ViewBag.Title = "ReviewCompanyFeedback";

}
<style>
    .col-md-10 {
        font-size: 30px;
        color: black;
    }
</style>
<style>
    import url(https://fonts.googleapis.com/css?family=Roboto:500,100,300,700,400);
    * {
        margin: 0;
        padding: 0;
        font-family: roboto;
    }

    body {
        background-color: wheat;
    }

    .cont {
        width: 93%;
        max-width: 350px;
        text-align: center;
        margin: 4% auto;
        padding: 30px 0;
        background-color: beige;
        color: #EEE;
        border-radius: 5px;
        border: thin solid #444;
        overflow: hidden;
    }

    hr {
        margin: 20px;
        border: none;
        border-bottom: thin solid rgba(255,255,255,.1);
    }

    div.title {
        font-size: 2em;
    }

    h1 span {
        font-weight: 300;
        color: #Fd4;
    }

    div.stars {
        width: 270px;
        display: inline-block;
    }

    input.star {
        display: none;
    }

    label.star {
        float: right;
        padding: 10px;
        font-size: 36px;
        color: #444;
        transition: all .2s;
    }

    input.star:checked ~ label.star {
        content: '\f005';
        color: #FD4;
        transition: all .25s;
    }


    input.star-5:checked ~ label.star:before {
        color: #FE7;
        text-shadow: 0 0 20px #952;
    }

    input.star-1:checked ~ label.star:before {
        color: #F62;
    }

    label.star:hover {
        transform: rotate(-15deg) scale(1.3);
    }

    label.star:before {
        content: '\f006';
        font-family: FontAwesome;
    }

    .rev-box {
        overflow: hidden;
        height: 0;
        width: 100%;
        transition: all .25s;
    }

    textarea.review {
        background-color: azure;
        border: none;
        width: 100%;
        max-width: 100%;
        height: 100px;
        padding: 10px;
        box-sizing: border-box;
        color: #EEE;
    }

    label.review {
        display: block;
        transition: opacity .25s;
    }



    input.star:checked ~ .rev-box {
        height: 125px;
        overflow: visible;
    }
</style>
<head>
    <style>
        #span1, #span2, #span3, #span4, #span5 {
            font-size: 40px;
        }
    </style>
</head>

<link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/css/bootstrap.min.css">
@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.4/jquery.min.js"></script>
<script src="https://maxcdn.bootstrapcdn.com/bootstrap/3.4.0/js/bootstrap.min.js"></script>*@

@using (Html.BeginForm("ReviewCompany", "JobSeeker", FormMethod.Get, new { @enctype = "multipart/form-data" }))
{
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.CompanyName, "Company Name", htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-10">
            @Html.HiddenFor(model => model.CompanyId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.DisplayFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <br />
    <div class="form-group">
        @Html.LabelFor(model => model.DoyouCurrentlyworkhere, "Do you Currently work here?", htmlAttributes: new { @class = "control-label col-md-4" })
        <div class="col-md-9">
            @Html.Label("Yes")
            @Html.RadioButtonFor(Model => Model.DoyouCurrentlyworkhere, "True", new { @id = "Yes" })&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;
            @Html.Label("No")
            @Html.RadioButtonFor(model => model.DoyouCurrentlyworkhere, "False", new { @id = "No" })
            @Html.ValidationMessageFor(model => model.DoyouCurrentlyworkhere, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />
    <br />

    <div class="form-group">
        @Html.LabelFor(model => model.Rating, "Rating", htmlAttributes: new { @class = "control-label col-md-3", @Style = "margin-left:5px;" })
        <div class="col-md-10">
            <div onclick="fixrating()">
                <span onclick="fix(1)" class="glyphicon glyphicon-star-empty" id="span1"></span>
                <span onclick="fix(2)" class="glyphicon glyphicon-star-empty" id="span2"></span>
                <span onclick="fix(3)" class="glyphicon glyphicon-star-empty" id="span3"></span>
                <span onclick="fix(4)" class="glyphicon glyphicon-star-empty" id="span4"></span>
                <span onclick="fix(5)" class="glyphicon glyphicon-star-empty" id="span5"></span>
            </div>
            <input type="hidden" id="ratings" name="ratings" />
            @*<input type="submit" value="Submit" />*@
        </div>
    </div>
    <br />
    <div class="item form-group">
        @Html.LabelFor(model => model.Review, "Profile Summary", htmlAttributes: new { @class = "control-label col-md-3" })
        <div class="col-md-10">
            @Html.TextAreaFor(model => model.Review, new { htmlAttributes = new { @class = "form-control", rows = "6", cols = "50" } })
            @Html.ValidationMessageFor(model => model.Review, "", new { @class = "text-danger" })
        </div>
    </div>
    <br />

    <div class="form-group" style="margin-left:500px">
        <div class="col-md-offset-3 col-md-10">
            <button type="button" class="btn btn-default" data-dismiss="modal">CANCEL</button>
            <input type="submit" value="Review" class="btn btn-primary" />
        </div>
    </div>

}

<script>

    function fix(rating) {
        $("#ratings").val(rating);
        for (i = 1; i <= rating; i++) {
            $("#span" + i).attr("class", "glyphicon glyphicon-star")
            $("#span" + i).css("color", "gold")
            $("#span" + i).css("hover", "gold")
        }
    }
    function fixrating() {
        var rating = parseInt($("#ratings").val());
        for (i = 1; i <= rating; i++) {
            $("#span" + i).attr("class", "glyphicon glyphicon-star")
        }
        if (rating < 5) {

            for (i = rating + 1; i <= 5; i++) {
                $("#span" + i).attr("class", "glyphicon glyphicon-star-empty")
            }
        }
    }

</script>
